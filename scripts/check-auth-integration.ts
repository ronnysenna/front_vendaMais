import { prisma } from "../src/lib/prisma";

async function checkAuthIntegration() {
  console.log("\nüîç VERIFICANDO INTEGRA√á√ÉO BETTER AUTH COM O BANCO DE DADOS\n");

  try {
    // Verificar tabela de usu√°rios
    const usersCount = await prisma.user.count();
    console.log(`‚úÖ Tabela de usu√°rios: ${usersCount} usu√°rios encontrados`);

    if (usersCount > 0) {
      const users = await prisma.user.findMany({
        include: {
          accounts: true,
        },
        take: 3,
      });

      console.log("\nüìã Exemplo dos primeiros usu√°rios:");
      users.forEach((user, index) => {
        console.log(`\nüë§ Usu√°rio ${index + 1}:`);
        console.log(`   ID: ${user.id}`);
        console.log(`   Nome: ${user.name}`);
        console.log(`   Email: ${user.email}`);
        console.log(`   Email verificado: ${user.emailVerified}`);
        console.log(`   Contas vinculadas: ${user.accounts.length}`);

        if (user.accounts.length > 0) {
          console.log("   üîë Detalhes da primeira conta:");
          console.log(`      Provedor: ${user.accounts[0].providerId}`);
          console.log(`      ID da conta: ${user.accounts[0].accountId}`);
          console.log(
            `      Senha definida: ${user.accounts[0].password ? "Sim" : "N√£o"}`
          );
        }
      });
    }

    // Verificar configura√ß√£o do Better Auth
    console.log("\nüîê Configura√ß√£o do Better Auth:");
    console.log(`   Provider do banco: PostgreSQL`);
    console.log(`   Autentica√ß√£o por email: Ativada`);
    console.log(
      `   Verifica√ß√£o de email: ${process.env.BETTER_AUTH_REQUIRE_VERIFICATION === "true" ? "Obrigat√≥ria" : "N√£o obrigat√≥ria"}`
    );
    console.log(`   Autentica√ß√£o Google: Configurada`);

    console.log("\n‚úÖ Verifica√ß√£o de integra√ß√£o conclu√≠da com sucesso!");
  } catch (error) {
    console.error("‚ùå Erro ao verificar integra√ß√£o:", error);
  } finally {
    await prisma.$disconnect();
  }
}

checkAuthIntegration();
